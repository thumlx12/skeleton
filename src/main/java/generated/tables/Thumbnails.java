/**
 * This class is generated by jOOQ
 */
package generated.tables;


import generated.Keys;
import generated.Public;
import generated.tables.records.ThumbnailsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Thumbnails extends TableImpl<ThumbnailsRecord> {

	private static final long serialVersionUID = -266125821;

	/**
	 * The reference instance of <code>public.thumbnails</code>
	 */
	public static final Thumbnails THUMBNAILS = new Thumbnails();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ThumbnailsRecord> getRecordType() {
		return ThumbnailsRecord.class;
	}

	/**
	 * The column <code>public.thumbnails.id</code>.
	 */
	public final TableField<ThumbnailsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.thumbnails.img</code>.
	 */
	public final TableField<ThumbnailsRecord, String> IMG = createField("img", org.jooq.impl.SQLDataType.VARCHAR.length(2147483647), this, "");

	/**
	 * Create a <code>public.thumbnails</code> table reference
	 */
	public Thumbnails() {
		this("thumbnails", null);
	}

	/**
	 * Create an aliased <code>public.thumbnails</code> table reference
	 */
	public Thumbnails(String alias) {
		this(alias, THUMBNAILS);
	}

	private Thumbnails(String alias, Table<ThumbnailsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Thumbnails(String alias, Table<ThumbnailsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ThumbnailsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_THUMBNAILS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ThumbnailsRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_B;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ThumbnailsRecord>> getKeys() {
		return Arrays.<UniqueKey<ThumbnailsRecord>>asList(Keys.CONSTRAINT_B);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Thumbnails as(String alias) {
		return new Thumbnails(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Thumbnails rename(String name) {
		return new Thumbnails(name, null);
	}
}
